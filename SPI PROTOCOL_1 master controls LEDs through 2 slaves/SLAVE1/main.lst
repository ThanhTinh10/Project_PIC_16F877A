CCS PCM C Compiler, Version 5.015, 5967               01-Thg6-23 21:44

               Filename:   C:\Users\Administrator\Documents\project_pic\SPI PROTOCOL\SLAVE1\main.lst

               ROM used:   61 words (1%)
                           Largest free fragment is 2048
               RAM used:   7 (2%) at main() level
                           8 (2%) worst case
               Stack used: 0 locations
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   004
0003:  NOP
.................... #include <16F877A.h> 
.................... //////////// Standard Header file for the PIC16F877A device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2013 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F877A 
....................  
.................... #list 
....................  
.................... #device adc=8 
....................  
.................... #FUSES NOWDT                    //No Watch Dog Timer 
.................... #FUSES HS                       //High speed Osc (> 4mhz for PCM/PCH) (>10mhz for PCD) 
.................... #FUSES NOPUT                    //No Power Up Timer 
.................... #FUSES NOPROTECT                //Code not protected from reading 
.................... #FUSES NODEBUG                  //No Debug mode for ICD 
.................... #FUSES NOBROWNOUT               //No brownout reset 
.................... #FUSES NOLVP                    //No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
.................... #FUSES NOCPD                    //No EE protection 
.................... #FUSES NOWRT                    //Program memory not write protected 
.................... #FUSES RESERVED                 //Used to set the reserved FUSE bits 
.................... //#use delay(clock=20000000) 
.................... //#define CS_PIN PIN_A5 
.................... //#bit CS_PIN = 0x06.1 
.................... #byte TRISD = 0x88 
.................... #byte PORTD = 0x08 
.................... #byte TRISA = 0x85 
....................  
.................... void main() 
0004:  MOVF   03,W
0005:  ANDLW  1F
0006:  MOVWF  03
0007:  MOVLW  FF
0008:  MOVWF  20
0009:  BSF    03.5
000A:  BSF    1F.0
000B:  BSF    1F.1
000C:  BSF    1F.2
000D:  BCF    1F.3
000E:  MOVLW  07
000F:  MOVWF  1C
0010:  BCF    03.7
.................... {    
....................     TRISD = 0; 
0011:  CLRF   08
....................     PORTD=0; 
0012:  BCF    03.5
0013:  CLRF   08
....................     TRISA=1; 
0014:  MOVLW  01
0015:  BSF    03.5
0016:  MOVWF  05
....................     setup_spi(SPI_SLAVE | SPI_L_TO_H   | SPI_CLK_DIV_16 ); 
0017:  BCF    03.5
0018:  BCF    14.5
0019:  BCF    20.5
001A:  MOVF   20,W
001B:  BSF    03.5
001C:  MOVWF  07
001D:  BCF    03.5
001E:  BSF    20.4
001F:  MOVF   20,W
0020:  BSF    03.5
0021:  MOVWF  07
0022:  BCF    03.5
0023:  BSF    20.3
0024:  MOVF   20,W
0025:  BSF    03.5
0026:  MOVWF  07
0027:  MOVLW  25
0028:  BCF    03.5
0029:  MOVWF  14
002A:  MOVLW  00
002B:  BSF    03.5
002C:  MOVWF  14
....................     int8 data2; 
....................   while(TRUE) 
....................      {     
....................      data2= spi_read();  
002D:  RRF    14,W
002E:  BTFSS  03.0
002F:  GOTO   02D
0030:  BCF    03.5
0031:  MOVF   13,W
0032:  MOVWF  21
....................      if(input(PIN_A5) == 0)  
0033:  BSF    03.5
0034:  BSF    05.5
0035:  BCF    03.5
0036:  BTFSC  05.5
0037:  GOTO   03A
....................         PORTD= data2; 
0038:  MOVF   21,W
0039:  MOVWF  08
003A:  BSF    03.5
003B:  GOTO   02D
....................     } 
....................  
.................... } 
003C:  SLEEP

Configuration Fuses:
   Word  1: 3F3A   HS NOWDT NOPUT NOBROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT
